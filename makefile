# Makefile ‚Äî Projet C avec src/, include/, build/, bin/, et lib/

# Nom du projet (nom de l'ex√©cutable final)
TARGET = mon_projet

# üìÅ R√©pertoires principaux
SRC_DIR = src
INC_DIR = include
BUILD_DIR = build
BIN_DIR = bin
LIB_DIR = lib

#  Compilateur et options
CC = gcc
CFLAGS = -Wall -Wextra -I$(INC_DIR)

# Lien avec les biblioth√®ques dans lib/
LDFLAGS = -L$(LIB_DIR)
LDLIBS = -lm    

#  Trouve automatiquement tous les fichiers .c dans src/
SRC = $(wildcard $(SRC_DIR)/*.c)

#  G√©n√®re les noms des fichiers objets (.o) correspondants dans build/
OBJ = $(SRC:$(SRC_DIR)/%.c=$(BUILD_DIR)/%.o)


#  R√®gle par d√©faut

all: $(BIN_DIR)/$(TARGET)


#  √âdition de liens : cr√©ation de l‚Äôex√©cutable final

$(BIN_DIR)/$(TARGET): $(OBJ) | $(BIN_DIR)
	@echo " [LINK] $@"
	$(CC) $(CFLAGS) $(OBJ) -o $@ $(LDFLAGS) $(LDLIBS)

#  Compilation de chaque fichier source en fichier objet

$(BUILD_DIR)/%.o: $(SRC_DIR)/%.c | $(BUILD_DIR)
	@echo " [CC] $< ‚Üí $@"
	$(CC) $(CFLAGS) -c $< -o $@

#  Cr√©ation des dossiers s‚Äôils n‚Äôexistent pas

$(BIN_DIR) $(BUILD_DIR):
	@mkdir -p $@

# Nettoyage des fichiers interm√©diaires

clean:
	@echo " Suppression des fichiers objets..."
	rm -rf $(BUILD_DIR)/*.o


#  Nettoyage complet

fclean: clean
	@echo " Suppression des ex√©cutables..."
	rm -rf $(BIN_DIR)/$(TARGET)


#  Recompile tout depuis z√©ro

re: fclean all


#  Aide (documentation des commandes)

help:
	@echo ""
	@echo " Commandes disponibles :"
	@echo "  make        ‚Üí Compile le projet (par d√©faut)"
	@echo "  make clean  ‚Üí Supprime les fichiers objets (.o)"
	@echo "  make fclean ‚Üí Supprime tout (binaires + build)"
	@echo "  make re     ‚Üí Recompile tout depuis z√©ro"
	@echo "  make help   ‚Üí Affiche cette aide"
	@echo ""


# üß© R√®gles sp√©ciales

.PHONY: all clean fclean re help
